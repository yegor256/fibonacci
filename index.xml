<fibonacci input='32' date='2022-03-18' uname='Linux x3.0dmx.com 4.15.0-118-generic #119-Ubuntu SMP Tue Sep 8 12:30:01 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux'><headers><h m='file' short='Program' type='text'>File name as it's seen in the source code repository</h><h m='instructions' short='ASM'>Total number of Assembly instructions seen in the compiled .asm file; not every compiler provides this information though</h><h m='cycles' short='Cycles'>How many times the Fibonacci number has been calculated</h><h m='time' short='Time'>How many seconds it took to execute all calculations</h><h m='time_per_cycle' short='SPC'>How many seconds per each calculation</h><h m='ticks' short='Ticks'>How many total CPU ticks it took to execute all calculations, according to perf</h><h m='ticks_per_cycle' short='TPC'>How many ticks per a single calculation</h><h m='ghz' short='GHz'>TPC divided by SPC and divided by one billion; this is approximately how fast is the CPU; this metric for all programs is expected to have almost the same values, otherwise something is wrong with the method</h></headers><programs><program> 	<file>cpp/interpreter.cpp</file> 	<name>cpp-interpreter</name> 	<instructions>3125</instructions> 	<cycles>8192</cycles> 	<time>1.89</time> 	<time_per_cycle>.0002307128906250</time_per_cycle> 	<ticks>6630889303</ticks> 	<ticks_per_cycle>809434</ticks_per_cycle> 	</program>
<program> 	<file>cpp/formula.cpp</file> 	<name>cpp-formula</name> 	<instructions>197</instructions> 	<cycles>8388608</cycles> 	<time>1.70</time> 	<time_per_cycle>.0000002026557922</time_per_cycle> 	<ticks>6122820225</ticks> 	<ticks_per_cycle>729</ticks_per_cycle> 	</program>
<program> 	<file>cpp/recursion.cpp</file> 	<name>cpp-recursion</name> 	<instructions>72</instructions> 	<cycles>256</cycles> 	<time>5.57</time> 	<time_per_cycle>.0217578125000000</time_per_cycle> 	<ticks>19965043683</ticks> 	<ticks_per_cycle>77988451</ticks_per_cycle> 	</program>
<program> 	<file>cpp/static_member_functions.cpp</file> 	<name>cpp-static_member_functions</name> 	<instructions>116</instructions> 	<cycles>256</cycles> 	<time>15.04</time> 	<time_per_cycle>.0587500000000000</time_per_cycle> 	<ticks>53785213373</ticks> 	<ticks_per_cycle>210098489</ticks_per_cycle> 	</program>
<program> 	<file>cpp/decorators.cpp</file> 	<name>cpp-decorators</name> 	<instructions>366</instructions> 	<cycles>256</cycles> 	<time>6.50</time> 	<time_per_cycle>.0253906250000000</time_per_cycle> 	<ticks>23689139563</ticks> 	<ticks_per_cycle>92535701</ticks_per_cycle> 	</program>
<program> 	<file>cpp/functions_with_new.cpp</file> 	<name>cpp-functions_with_new</name> 	<instructions>269</instructions> 	<cycles>1</cycles> 	<time>16.64</time> 	<time_per_cycle>16.6400000000000000</time_per_cycle> 	<ticks>59339081163</ticks> 	<ticks_per_cycle>59339081163</ticks_per_cycle> 	</program>
<program> 	<file>cpp/stack_objects.cpp</file> 	<name>cpp-stack_objects</name> 	<instructions>173</instructions> 	<cycles>256</cycles> 	<time>49.31</time> 	<time_per_cycle>.1926171875000000</time_per_cycle> 	<ticks>175159526706</ticks> 	<ticks_per_cycle>684216901</ticks_per_cycle> 	</program>
<program> 	<file>cpp/classes.cpp</file> 	<name>cpp-classes</name> 	<instructions>186</instructions> 	<cycles>256</cycles> 	<time>38.39</time> 	<time_per_cycle>.1499609375000000</time_per_cycle> 	<ticks>137496994045</ticks> 	<ticks_per_cycle>537097632</ticks_per_cycle> 	</program>
<program> 	<file>cpp/lambdas.cpp</file> 	<name>cpp-lambdas</name> 	<instructions>309</instructions> 	<cycles>1</cycles> 	<time>21.19</time> 	<time_per_cycle>21.1900000000000000</time_per_cycle> 	<ticks>74621529742</ticks> 	<ticks_per_cycle>74621529742</ticks_per_cycle> 	</program>
<program> 	<file>cpp/objects.cpp</file> 	<name>cpp-objects</name> 	<instructions>898</instructions> 	<cycles>1</cycles> 	<time>23.79</time> 	<time_per_cycle>23.7900000000000000</time_per_cycle> 	<ticks>86306496098</ticks> 	<ticks_per_cycle>86306496098</ticks_per_cycle> 	</program>
<program> 	<file>cpp/loop.cpp</file> 	<name>cpp-loop</name> 	<instructions>73</instructions> 	<cycles>16777216</cycles> 	<time>1.24</time> 	<time_per_cycle>.0000000739097595</time_per_cycle> 	<ticks>4458949373</ticks> 	<ticks_per_cycle>265</ticks_per_cycle> 	</program>
<program> 	<file>cpp/novirtual.cpp</file> 	<name>cpp-novirtual</name> 	<instructions>419</instructions> 	<cycles>1</cycles> 	<time>152.95</time> 	<time_per_cycle>152.9500000000000000</time_per_cycle> 	<ticks>544414284349</ticks> 	<ticks_per_cycle>544414284349</ticks_per_cycle> 	</program>
<program> 	<file>cpp/inlines.cpp</file> 	<name>cpp-inlines</name> 	<instructions>107</instructions> 	<cycles>256</cycles> 	<time>14.75</time> 	<time_per_cycle>.0576171875000000</time_per_cycle> 	<ticks>52913177508</ticks> 	<ticks_per_cycle>206692099</ticks_per_cycle> 	</program>
<program> 	<file>cpp/matrixes.cpp</file> 	<name>cpp-matrixes</name> 	<instructions>463</instructions> 	<cycles>262144</cycles> 	<time>1.07</time> 	<time_per_cycle>.0000040817260742</time_per_cycle> 	<ticks>3929302813</ticks> 	<ticks_per_cycle>14989</ticks_per_cycle> 	</program>
<program> 	<file>cpp/binpow-matrix.cpp</file> 	<name>cpp-binpow-matrix</name> 	<instructions>326</instructions> 	<cycles>2097152</cycles> 	<time>1.75</time> 	<time_per_cycle>.0000008344650268</time_per_cycle> 	<ticks>6397243713</ticks> 	<ticks_per_cycle>3050</ticks_per_cycle> 	</program>
<program> 	<file>cpp/functions.cpp</file> 	<name>cpp-functions</name> 	<instructions>116</instructions> 	<cycles>256</cycles> 	<time>14.76</time> 	<time_per_cycle>.0576562500000000</time_per_cycle> 	<ticks>53047377262</ticks> 	<ticks_per_cycle>207216317</ticks_per_cycle> 	</program>
<program> 	<file>rust/structs.rs</file> 	<name>rust-structs</name> 	<instructions>4164</instructions> 	<cycles>8</cycles> 	<time>12.66</time> 	<time_per_cycle>1.5825000000000000</time_per_cycle> 	<ticks>45472349173</ticks> 	<ticks_per_cycle>5684043646</ticks_per_cycle> 	</program>
<program> 	<file>rust/recursion.rs</file> 	<name>rust-recursion</name> 	<instructions>3998</instructions> 	<cycles>256</cycles> 	<time>9.54</time> 	<time_per_cycle>.0372656250000000</time_per_cycle> 	<ticks>34570318254</ticks> 	<ticks_per_cycle>135040305</ticks_per_cycle> 	</program>
<program> 	<file>lisp/recursion.lisp</file> 	<name>lisp-recursion</name> 	<instructions>1</instructions> 	<cycles>256</cycles> 	<time>17.30</time> 	<time_per_cycle>.0675781250000000</time_per_cycle> 	<ticks>62178193527</ticks> 	<ticks_per_cycle>242883568</ticks_per_cycle> 	</program>
<program> 	<file>haskell/recursion.hi haskell/recursion.hs</file> 	<name>haskell-recursion</name> 	<instructions>1208</instructions> 	<cycles>256</cycles> 	<time>50.17</time> 	<time_per_cycle>.1959765625000000</time_per_cycle> 	<ticks>196390691369</ticks> 	<ticks_per_cycle>767151138</ticks_per_cycle> 	</program>
<program> 	<file>haskell/zipwith.hi haskell/zipwith.hs</file> 	<name>haskell-zipwith</name> 	<instructions>1172</instructions> 	<cycles>2097152</cycles> 	<time>1.05</time> 	<time_per_cycle>.0000005006790161</time_per_cycle> 	<ticks>3746184990</ticks> 	<ticks_per_cycle>1786</ticks_per_cycle> 	</program>
<program> 	<file>haskell/objects.hi haskell/objects.hs</file> 	<name>haskell-objects</name> 	<instructions>1325</instructions> 	<cycles>16</cycles> 	<time>19.73</time> 	<time_per_cycle>1.2331250000000000</time_per_cycle> 	<ticks>70856899688</ticks> 	<ticks_per_cycle>4428556230</ticks_per_cycle> 	</program>
<program> 	<file>haskell/polymorphic_recursion.hi haskell/polymorphic_recursion.hs</file> 	<name>haskell-polymorphic_recursion</name> 	<instructions>2253</instructions> 	<cycles>8</cycles> 	<time>16.48</time> 	<time_per_cycle>2.0600000000000000</time_per_cycle> 	<ticks>61763515383</ticks> 	<ticks_per_cycle>7720439422</ticks_per_cycle> 	</program>
<program> 	<file>haskell/object_dynamic.hi haskell/object_dynamic.hs</file> 	<name>haskell-object_dynamic</name> 	<instructions>1302</instructions> 	<cycles>262144</cycles> 	<time>1.79</time> 	<time_per_cycle>.0000068283081054</time_per_cycle> 	<ticks>6194310938</ticks> 	<ticks_per_cycle>23629</ticks_per_cycle> 	</program>
<program> 	<file>haskell/tail_recursion.hi haskell/tail_recursion.hs</file> 	<name>haskell-tail_recursion</name> 	<instructions>1226</instructions> 	<cycles>524288</cycles> 	<time>1.50</time> 	<time_per_cycle>.0000028610229492</time_per_cycle> 	<ticks>5412116135</ticks> 	<ticks_per_cycle>10322</ticks_per_cycle> 	</program>
<program> 	<file>haskell/iterate.hi haskell/iterate.hs</file> 	<name>haskell-iterate</name> 	<instructions>1195</instructions> 	<cycles>1048576</cycles> 	<time>1.65</time> 	<time_per_cycle>.0000015735626220</time_per_cycle> 	<ticks>5595793250</ticks> 	<ticks_per_cycle>5336</ticks_per_cycle> 	</program>
<program> 	<file>haskell/adt.hi haskell/adt.hs</file> 	<name>haskell-adt</name> 	<instructions>1314</instructions> 	<cycles>256</cycles> 	<time>94.62</time> 	<time_per_cycle>.3696093750000000</time_per_cycle> 	<ticks>357756780509</ticks> 	<ticks_per_cycle>1397487423</ticks_per_cycle> 	</program>
<program> 	<file></file> 	<name>go-fast</name> 	<instructions>1</instructions> 	<cycles>33554432</cycles> 	<time>1.07</time> 	<time_per_cycle>.0000000318884849</time_per_cycle> 	<ticks>3884785485</ticks> 	<ticks_per_cycle>115</ticks_per_cycle> 	</program>
<program> 	<file></file> 	<name>go-structs</name> 	<instructions>1</instructions> 	<cycles>4</cycles> 	<time>20.74</time> 	<time_per_cycle>5.1850000000000000</time_per_cycle> 	<ticks>81348702338</ticks> 	<ticks_per_cycle>20337175584</ticks_per_cycle> 	</program>
<program> 	<file></file> 	<name>go-recursion</name> 	<instructions>1</instructions> 	<cycles>256</cycles> 	<time>5.04</time> 	<time_per_cycle>.0196875000000000</time_per_cycle> 	<ticks>16500964293</ticks> 	<ticks_per_cycle>64456891</ticks_per_cycle> 	</program>
<program> 	<file>java/Objects.java</file> 	<name>java-Objects</name> 	<instructions>1</instructions> 	<cycles>8</cycles> 	<time>15.12</time> 	<time_per_cycle>1.8900000000000000</time_per_cycle> 	<ticks>54106302517</ticks> 	<ticks_per_cycle>6763287814</ticks_per_cycle> 	</program>
<program> 	<file>java/Functions.java</file> 	<name>java-Functions</name> 	<instructions>1</instructions> 	<cycles>256</cycles> 	<time>8.35</time> 	<time_per_cycle>.0326171875000000</time_per_cycle> 	<ticks>30248468868</ticks> 	<ticks_per_cycle>118158081</ticks_per_cycle> 	</program>
<program> 	<file>java/Recursion.java</file> 	<name>java-Recursion</name> 	<instructions>1</instructions> 	<cycles>256</cycles> 	<time>3.55</time> 	<time_per_cycle>.0138671875000000</time_per_cycle> 	<ticks>12627210646</ticks> 	<ticks_per_cycle>49325041</ticks_per_cycle> 	</program>
<program> 	<file>pascal/recursion.pp</file> 	<name>pascal-recursion</name> 	<instructions>1</instructions> 	<cycles>256</cycles> 	<time>6.43</time> 	<time_per_cycle>.0251171875000000</time_per_cycle> 	<ticks>23133420087</ticks> 	<ticks_per_cycle>90364922</ticks_per_cycle> 	</program>
<program> 	<file>pascal/Objects.pp</file> 	<name>pascal-Objects</name> 	<instructions>1</instructions> 	<cycles>2</cycles> 	<time>20.31</time> 	<time_per_cycle>10.1550000000000000</time_per_cycle> 	<ticks>76199385946</ticks> 	<ticks_per_cycle>38099692973</ticks_per_cycle> 	</program>
<program> 	<file>ada/recursion.adb</file> 	<name>ada-recursion</name> 	<instructions>1</instructions> 	<cycles>256</cycles> 	<time>7.92</time> 	<time_per_cycle>.0309375000000000</time_per_cycle> 	<ticks>28847692428</ticks> 	<ticks_per_cycle>112686298</ticks_per_cycle> 	</program>
</programs></fibonacci>