<fibonacci input='32' date='2024-09-25' uname='Linux ip-172-31-20-140 6.8.0-1016-aws #17-Ubuntu SMP Mon Sep  2 13:48:07 UTC 2024 x86_64 x86_64 x86_64 GNU/Linux'><headers><h m='file' short='Program' type='text'>File name as it's seen in the source code repository</h><h m='instructions' short='ASM'>Total number of Assembly instructions seen in the compiled .asm file; not every compiler provides this information though</h><h m='cycles' short='Cycles'>How many times the Fibonacci number has been calculated</h><h m='time' short='Time'>How many seconds it took to execute all calculations</h><h m='time_per_cycle' short='SPC'>How many seconds per each calculation</h><h m='ticks' short='Ticks'>How many total CPU ticks it took to execute all calculations, according to perf</h><h m='ticks_per_cycle' short='TPC'>How many ticks per a single calculation</h><h m='ghz' short='GHz'>TPC divided by SPC and divided by one billion; this is approximately how fast is the CPU; this metric for all programs is expected to have almost the same values, otherwise something is wrong with the method</h></headers><programs><program> 	<file>cpp/binpow-matrix.cpp</file> 	<name>cpp-binpow-matrix</name> 	<instructions>160</instructions> 	<cycles>67108864</cycles> 	<time>1.34</time> 	<time_per_cycle>.0000000199675559</time_per_cycle> 	<ticks>5245698882</ticks> 	<ticks_per_cycle>78</ticks_per_cycle> 	</program>
<program> 	<file>cpp/classes.cpp</file> 	<name>cpp-classes</name> 	<instructions>82</instructions> 	<cycles>256</cycles> 	<time>2.86</time> 	<time_per_cycle>.0111718750000000</time_per_cycle> 	<ticks>11125912160</ticks> 	<ticks_per_cycle>43460594</ticks_per_cycle> 	</program>
<program> 	<file>cpp/decorators.cpp</file> 	<name>cpp-decorators</name> 	<instructions>198</instructions> 	<cycles>256</cycles> 	<time>2.64</time> 	<time_per_cycle>.0103125000000000</time_per_cycle> 	<ticks>9902213605</ticks> 	<ticks_per_cycle>38680521</ticks_per_cycle> 	</program>
<program> 	<file>cpp/functions.cpp</file> 	<name>cpp-functions</name> 	<instructions>86</instructions> 	<cycles>256</cycles> 	<time>6.16</time> 	<time_per_cycle>.0240625000000000</time_per_cycle> 	<ticks>23992461442</ticks> 	<ticks_per_cycle>93720552</ticks_per_cycle> 	</program>
<program> 	<file>cpp/functions_with_new.cpp</file> 	<name>cpp-functions_with_new</name> 	<instructions>200</instructions> 	<cycles>256</cycles> 	<time>230.08</time> 	<time_per_cycle>.8987500000000000</time_per_cycle> 	<ticks>894853448732</ticks> 	<ticks_per_cycle>3495521284</ticks_per_cycle> 	</program>
<program> 	<file>cpp/inlines.cpp</file> 	<name>cpp-inlines</name> 	<instructions>68</instructions> 	<cycles>256</cycles> 	<time>1.50</time> 	<time_per_cycle>.0058593750000000</time_per_cycle> 	<ticks>5865810748</ticks> 	<ticks_per_cycle>22913323</ticks_per_cycle> 	</program>
<program> 	<file>cpp/interpreter.cpp</file> 	<name>cpp-interpreter</name> 	<instructions>2946</instructions> 	<cycles>65536</cycles> 	<time>1.10</time> 	<time_per_cycle>.0000167846679687</time_per_cycle> 	<ticks>4272112281</ticks> 	<ticks_per_cycle>65187</ticks_per_cycle> 	</program>
<program> 	<file>cpp/lambdas.cpp</file> 	<name>cpp-lambdas</name> 	<instructions>450</instructions> 	<cycles>16</cycles> 	<time>19.31</time> 	<time_per_cycle>1.2068750000000000</time_per_cycle> 	<ticks>75224637119</ticks> 	<ticks_per_cycle>4701539819</ticks_per_cycle> 	</program>
<program> 	<file>cpp/loop.cpp</file> 	<name>cpp-loop</name> 	<instructions>115</instructions> 	<cycles>268435456</cycles> 	<time>1.56</time> 	<time_per_cycle>.0000000058114528</time_per_cycle> 	<ticks>6094902610</ticks> 	<ticks_per_cycle>22</ticks_per_cycle> 	</program>
<program> 	<file>cpp/matrixes.cpp</file> 	<name>cpp-matrixes</name> 	<instructions>165</instructions> 	<cycles>134217728</cycles> 	<time>1.35</time> 	<time_per_cycle>.0000000100582838</time_per_cycle> 	<ticks>5267134284</ticks> 	<ticks_per_cycle>39</ticks_per_cycle> 	</program>
<program> 	<file>cpp/novirtual.cpp</file> 	<name>cpp-novirtual</name> 	<instructions>211</instructions> 	<cycles>256</cycles> 	<time>86.50</time> 	<time_per_cycle>.3378906250000000</time_per_cycle> 	<ticks>336587732485</ticks> 	<ticks_per_cycle>1314795830</ticks_per_cycle> 	</program>
<program> 	<file>cpp/objects.cpp</file> 	<name>cpp-objects</name> 	<instructions>511</instructions> 	<cycles>8</cycles> 	<time>14.81</time> 	<time_per_cycle>1.8512500000000000</time_per_cycle> 	<ticks>57878339994</ticks> 	<ticks_per_cycle>7234792499</ticks_per_cycle> 	</program>
<program> 	<file>cpp/recursion.cpp</file> 	<name>cpp-recursion</name> 	<instructions>68</instructions> 	<cycles>256</cycles> 	<time>1.51</time> 	<time_per_cycle>.0058984375000000</time_per_cycle> 	<ticks>5865478444</ticks> 	<ticks_per_cycle>22912025</ticks_per_cycle> 	</program>
<program> 	<file>cpp/stack_objects.cpp</file> 	<name>cpp-stack_objects</name> 	<instructions>82</instructions> 	<cycles>256</cycles> 	<time>2.85</time> 	<time_per_cycle>.0111328125000000</time_per_cycle> 	<ticks>11128012301</ticks> 	<ticks_per_cycle>43468798</ticks_per_cycle> 	</program>
<program> 	<file>cpp/static_member_functions.cpp</file> 	<name>cpp-static_member_functions</name> 	<instructions>69</instructions> 	<cycles>256</cycles> 	<time>1.51</time> 	<time_per_cycle>.0058984375000000</time_per_cycle> 	<ticks>5868966524</ticks> 	<ticks_per_cycle>22925650</ticks_per_cycle> 	</program>
<program> 	<file>rust/recursion.rs</file> 	<name>rust-recursion</name> 	<instructions>602</instructions> 	<cycles>2147483648</cycles> 	<time>0.00</time> 	<time_per_cycle>0</time_per_cycle> 	<ticks>31215025</ticks> 	<ticks_per_cycle>0</ticks_per_cycle> 	</program>
<program> 	<file>rust/structs.rs</file> 	<name>rust-structs</name> 	<instructions>707</instructions> 	<cycles>256</cycles> 	<time>237.45</time> 	<time_per_cycle>.9275390625000000</time_per_cycle> 	<ticks>924240089421</ticks> 	<ticks_per_cycle>3610312849</ticks_per_cycle> 	</program>
<program> 	<file>haskell/adt.hi haskell/adt.hs</file> 	<name>haskell-adt</name> 	<instructions>916</instructions> 	<cycles>256</cycles> 	<time>17.57</time> 	<time_per_cycle>.0686328125000000</time_per_cycle> 	<ticks>68817316937</ticks> 	<ticks_per_cycle>268817644</ticks_per_cycle> 	</program>
<program> 	<file>haskell/iterate.hi haskell/iterate.hs</file> 	<name>haskell-iterate</name> 	<instructions>906</instructions> 	<cycles>4194304</cycles> 	<time>1.42</time> 	<time_per_cycle>.0000003385543823</time_per_cycle> 	<ticks>5581490882</ticks> 	<ticks_per_cycle>1330</ticks_per_cycle> 	</program>
<program> 	<file>haskell/object_dynamic.hi haskell/object_dynamic.hs</file> 	<name>haskell-object_dynamic</name> 	<instructions>1113</instructions> 	<cycles>2097152</cycles> 	<time>1.02</time> 	<time_per_cycle>.0000004863739013</time_per_cycle> 	<ticks>3993785994</ticks> 	<ticks_per_cycle>1904</ticks_per_cycle> 	</program>
<program> 	<file>haskell/objects.hi haskell/objects.hs</file> 	<name>haskell-objects</name> 	<instructions>968</instructions> 	<cycles>256</cycles> 	<time>8.03</time> 	<time_per_cycle>.0313671875000000</time_per_cycle> 	<ticks>31358720107</ticks> 	<ticks_per_cycle>122495000</ticks_per_cycle> 	</program>
<program> 	<file>haskell/polymorphic_recursion.hi haskell/polymorphic_recursion.hs</file> 	<name>haskell-polymorphic_recursion</name> 	<instructions>2092</instructions> 	<cycles>256</cycles> 	<time>6.85</time> 	<time_per_cycle>.0267578125000000</time_per_cycle> 	<ticks>26668966804</ticks> 	<ticks_per_cycle>104175651</ticks_per_cycle> 	</program>
<program> 	<file>haskell/recursion.hi haskell/recursion.hs</file> 	<name>haskell-recursion</name> 	<instructions>786</instructions> 	<cycles>256</cycles> 	<time>3.89</time> 	<time_per_cycle>.0151953125000000</time_per_cycle> 	<ticks>15124885612</ticks> 	<ticks_per_cycle>59081584</ticks_per_cycle> 	</program>
<program> 	<file>haskell/tail_recursion.hi haskell/tail_recursion.hs</file> 	<name>haskell-tail_recursion</name> 	<instructions>781</instructions> 	<cycles>2097152</cycles> 	<time>1.05</time> 	<time_per_cycle>.0000005006790161</time_per_cycle> 	<ticks>4079266745</ticks> 	<ticks_per_cycle>1945</ticks_per_cycle> 	</program>
<program> 	<file>haskell/zipwith.hi haskell/zipwith.hs</file> 	<name>haskell-zipwith</name> 	<instructions>985</instructions> 	<cycles>4194304</cycles> 	<time>1.42</time> 	<time_per_cycle>.0000003385543823</time_per_cycle> 	<ticks>5520634788</ticks> 	<ticks_per_cycle>1316</ticks_per_cycle> 	</program>
<program> 	<file>go-fast</file> 	<name>go-fast</name> 	<instructions>1</instructions> 	<cycles>134217728</cycles> 	<time>1.59</time> 	<time_per_cycle>.0000000118464231</time_per_cycle> 	<ticks>6193212172</ticks> 	<ticks_per_cycle>46</ticks_per_cycle> 	</program>
<program> 	<file>go-recursion</file> 	<name>go-recursion</name> 	<instructions>1</instructions> 	<cycles>256</cycles> 	<time>2.60</time> 	<time_per_cycle>.0101562500000000</time_per_cycle> 	<ticks>10093291717</ticks> 	<ticks_per_cycle>39426920</ticks_per_cycle> 	</program>
<program> 	<file>go-structs</file> 	<name>go-structs</name> 	<instructions>1</instructions> 	<cycles>4</cycles> 	<time>15.96</time> 	<time_per_cycle>3.9900000000000000</time_per_cycle> 	<ticks>63569470232</ticks> 	<ticks_per_cycle>15892367558</ticks_per_cycle> 	</program>
<program> 	<file>java/Functions.java</file> 	<name>java-Functions</name> 	<instructions>1</instructions> 	<cycles>256</cycles> 	<time>2.73</time> 	<time_per_cycle>.0106640625000000</time_per_cycle> 	<ticks>10656259552</ticks> 	<ticks_per_cycle>41626013</ticks_per_cycle> 	</program>
<program> 	<file>java/Objects.java</file> 	<name>java-Objects</name> 	<instructions>1</instructions> 	<cycles>16</cycles> 	<time>18.85</time> 	<time_per_cycle>1.1781250000000000</time_per_cycle> 	<ticks>73384252696</ticks> 	<ticks_per_cycle>4586515793</ticks_per_cycle> 	</program>
<program> 	<file>java/Records.java</file> 	<name>java-Records</name> 	<instructions>1</instructions> 	<cycles>16</cycles> 	<time>18.09</time> 	<time_per_cycle>1.1306250000000000</time_per_cycle> 	<ticks>70511230573</ticks> 	<ticks_per_cycle>4406951910</ticks_per_cycle> 	</program>
<program> 	<file>java/Recursion.java</file> 	<name>java-Recursion</name> 	<instructions>1</instructions> 	<cycles>256</cycles> 	<time>2.74</time> 	<time_per_cycle>.0107031250000000</time_per_cycle> 	<ticks>10659290761</ticks> 	<ticks_per_cycle>41637854</ticks_per_cycle> 	</program>
<program> 	<file>pascal/Objects.pp</file> 	<name>pascal-Objects</name> 	<instructions>1</instructions> 	<cycles>2</cycles> 	<time>16.77</time> 	<time_per_cycle>8.3850000000000000</time_per_cycle> 	<ticks>65843068923</ticks> 	<ticks_per_cycle>32921534461</ticks_per_cycle> 	</program>
<program> 	<file>pascal/recursion.pp</file> 	<name>pascal-recursion</name> 	<instructions>1</instructions> 	<cycles>256</cycles> 	<time>3.88</time> 	<time_per_cycle>.0151562500000000</time_per_cycle> 	<ticks>15092346468</ticks> 	<ticks_per_cycle>58954478</ticks_per_cycle> 	</program>
<program> 	<file>csharp-Functions</file> 	<name>csharp-Functions</name> 	<instructions>1</instructions> 	<cycles>256</cycles> 	<time>2.40</time> 	<time_per_cycle>.0093750000000000</time_per_cycle> 	<ticks>9381717651</ticks> 	<ticks_per_cycle>36647334</ticks_per_cycle> 	</program>
<program> 	<file>csharp-Objects</file> 	<name>csharp-Objects</name> 	<instructions>1</instructions> 	<cycles>8</cycles> 	<time>11.78</time> 	<time_per_cycle>1.4725000000000000</time_per_cycle> 	<ticks>46094817086</ticks> 	<ticks_per_cycle>5761852135</ticks_per_cycle> 	</program>
<program> 	<file>csharp-Recursion</file> 	<name>csharp-Recursion</name> 	<instructions>1</instructions> 	<cycles>256</cycles> 	<time>2.40</time> 	<time_per_cycle>.0093750000000000</time_per_cycle> 	<ticks>9375264016</ticks> 	<ticks_per_cycle>36622125</ticks_per_cycle> 	</program>
<program> 	<file>csharp-Structs</file> 	<name>csharp-Structs</name> 	<instructions>1</instructions> 	<cycles>8</cycles> 	<time>11.97</time> 	<time_per_cycle>1.4962500000000000</time_per_cycle> 	<ticks>46723076496</ticks> 	<ticks_per_cycle>5840384562</ticks_per_cycle> 	</program>
</programs></fibonacci>