<fibonacci input='32' date='2024-09-23' uname='Linux ip-172-31-25-14 6.8.0-1015-aws #16~22.04.1-Ubuntu SMP Mon Aug 19 19:38:17 UTC 2024 x86_64 x86_64 x86_64 GNU/Linux'><headers><h m='file' short='Program' type='text'>File name as it's seen in the source code repository</h><h m='instructions' short='ASM'>Total number of Assembly instructions seen in the compiled .asm file; not every compiler provides this information though</h><h m='cycles' short='Cycles'>How many times the Fibonacci number has been calculated</h><h m='time' short='Time'>How many seconds it took to execute all calculations</h><h m='time_per_cycle' short='SPC'>How many seconds per each calculation</h><h m='ticks' short='Ticks'>How many total CPU ticks it took to execute all calculations, according to perf</h><h m='ticks_per_cycle' short='TPC'>How many ticks per a single calculation</h><h m='ghz' short='GHz'>TPC divided by SPC and divided by one billion; this is approximately how fast is the CPU; this metric for all programs is expected to have almost the same values, otherwise something is wrong with the method</h></headers><programs><program> 	<file>cpp/binpow-matrix.cpp</file> 	<name>cpp-binpow-matrix</name> 	<instructions>165</instructions> 	<cycles>67108864</cycles> 	<time>1.46</time> 	<time_per_cycle>.0000000217556953</time_per_cycle> 	<ticks>5692081527</ticks> 	<ticks_per_cycle>84</ticks_per_cycle> 	</program>
<program> 	<file>cpp/classes.cpp</file> 	<name>cpp-classes</name> 	<instructions>82</instructions> 	<cycles>256</cycles> 	<time>2.89</time> 	<time_per_cycle>.0112890625000000</time_per_cycle> 	<ticks>11245531996</ticks> 	<ticks_per_cycle>43927859</ticks_per_cycle> 	</program>
<program> 	<file>cpp/decorators.cpp</file> 	<name>cpp-decorators</name> 	<instructions>197</instructions> 	<cycles>256</cycles> 	<time>2.47</time> 	<time_per_cycle>.0096484375000000</time_per_cycle> 	<ticks>9716811726</ticks> 	<ticks_per_cycle>37956295</ticks_per_cycle> 	</program>
<program> 	<file>cpp/functions.cpp</file> 	<name>cpp-functions</name> 	<instructions>86</instructions> 	<cycles>256</cycles> 	<time>6.16</time> 	<time_per_cycle>.0240625000000000</time_per_cycle> 	<ticks>23995620430</ticks> 	<ticks_per_cycle>93732892</ticks_per_cycle> 	</program>
<program> 	<file>cpp/functions_with_new.cpp</file> 	<name>cpp-functions_with_new</name> 	<instructions>200</instructions> 	<cycles>256</cycles> 	<time>205.31</time> 	<time_per_cycle>.8019921875000000</time_per_cycle> 	<ticks>800146088422</ticks> 	<ticks_per_cycle>3125570657</ticks_per_cycle> 	</program>
<program> 	<file>cpp/inlines.cpp</file> 	<name>cpp-inlines</name> 	<instructions>68</instructions> 	<cycles>256</cycles> 	<time>1.32</time> 	<time_per_cycle>.0051562500000000</time_per_cycle> 	<ticks>5171966196</ticks> 	<ticks_per_cycle>20202992</ticks_per_cycle> 	</program>
<program> 	<file>cpp/interpreter.cpp</file> 	<name>cpp-interpreter</name> 	<instructions>3049</instructions> 	<cycles>65536</cycles> 	<time>1.06</time> 	<time_per_cycle>.0000161743164062</time_per_cycle> 	<ticks>4087681760</ticks> 	<ticks_per_cycle>62373</ticks_per_cycle> 	</program>
<program> 	<file>cpp/lambdas.cpp</file> 	<name>cpp-lambdas</name> 	<instructions>494</instructions> 	<cycles>8</cycles> 	<time>11.25</time> 	<time_per_cycle>1.4062500000000000</time_per_cycle> 	<ticks>44044193311</ticks> 	<ticks_per_cycle>5505524163</ticks_per_cycle> 	</program>
<program> 	<file>cpp/loop.cpp</file> 	<name>cpp-loop</name> 	<instructions>120</instructions> 	<cycles>268435456</cycles> 	<time>1.58</time> 	<time_per_cycle>.0000000058859586</time_per_cycle> 	<ticks>6172083625</ticks> 	<ticks_per_cycle>22</ticks_per_cycle> 	</program>
<program> 	<file>cpp/matrixes.cpp</file> 	<name>cpp-matrixes</name> 	<instructions>166</instructions> 	<cycles>134217728</cycles> 	<time>1.35</time> 	<time_per_cycle>.0000000100582838</time_per_cycle> 	<ticks>5265959963</ticks> 	<ticks_per_cycle>39</ticks_per_cycle> 	</program>
<program> 	<file>cpp/novirtual.cpp</file> 	<name>cpp-novirtual</name> 	<instructions>209</instructions> 	<cycles>256</cycles> 	<time>78.26</time> 	<time_per_cycle>.3057031250000000</time_per_cycle> 	<ticks>304565070926</ticks> 	<ticks_per_cycle>1189707308</ticks_per_cycle> 	</program>
<program> 	<file>cpp/objects.cpp</file> 	<name>cpp-objects</name> 	<instructions>448</instructions> 	<cycles>8</cycles> 	<time>13.15</time> 	<time_per_cycle>1.6437500000000000</time_per_cycle> 	<ticks>51321624396</ticks> 	<ticks_per_cycle>6415203049</ticks_per_cycle> 	</program>
<program> 	<file>cpp/recursion.cpp</file> 	<name>cpp-recursion</name> 	<instructions>68</instructions> 	<cycles>256</cycles> 	<time>1.32</time> 	<time_per_cycle>.0051562500000000</time_per_cycle> 	<ticks>5163439885</ticks> 	<ticks_per_cycle>20169687</ticks_per_cycle> 	</program>
<program> 	<file>cpp/stack_objects.cpp</file> 	<name>cpp-stack_objects</name> 	<instructions>82</instructions> 	<cycles>256</cycles> 	<time>2.89</time> 	<time_per_cycle>.0112890625000000</time_per_cycle> 	<ticks>11262303919</ticks> 	<ticks_per_cycle>43993374</ticks_per_cycle> 	</program>
<program> 	<file>cpp/static_member_functions.cpp</file> 	<name>cpp-static_member_functions</name> 	<instructions>69</instructions> 	<cycles>256</cycles> 	<time>1.46</time> 	<time_per_cycle>.0057031250000000</time_per_cycle> 	<ticks>5680946767</ticks> 	<ticks_per_cycle>22191198</ticks_per_cycle> 	</program>
<program> 	<file>rust/recursion.rs</file> 	<name>rust-recursion</name> 	<instructions>602</instructions> 	<cycles>2147483648</cycles> 	<time>0.00</time> 	<time_per_cycle>0</time_per_cycle> 	<ticks>30518569</ticks> 	<ticks_per_cycle>0</ticks_per_cycle> 	</program>
<program> 	<file>rust/structs.rs</file> 	<name>rust-structs</name> 	<instructions>707</instructions> 	<cycles>256</cycles> 	<time>235.74</time> 	<time_per_cycle>.9208593750000000</time_per_cycle> 	<ticks>920277694041</ticks> 	<ticks_per_cycle>3594834742</ticks_per_cycle> 	</program>
<program> 	<file>haskell/adt.hi haskell/adt.hs</file> 	<name>haskell-adt</name> 	<instructions>865</instructions> 	<cycles>256</cycles> 	<time>23.45</time> 	<time_per_cycle>.0916015625000000</time_per_cycle> 	<ticks>90572292324</ticks> 	<ticks_per_cycle>353798016</ticks_per_cycle> 	</program>
<program> 	<file>haskell/iterate.hi haskell/iterate.hs</file> 	<name>haskell-iterate</name> 	<instructions>791</instructions> 	<cycles>4194304</cycles> 	<time>1.44</time> 	<time_per_cycle>.0000003433227539</time_per_cycle> 	<ticks>5623338287</ticks> 	<ticks_per_cycle>1340</ticks_per_cycle> 	</program>
<program> 	<file>haskell/object_dynamic.hi haskell/object_dynamic.hs</file> 	<name>haskell-object_dynamic</name> 	<instructions>1076</instructions> 	<cycles>2097152</cycles> 	<time>1.05</time> 	<time_per_cycle>.0000005006790161</time_per_cycle> 	<ticks>4141977361</ticks> 	<ticks_per_cycle>1975</ticks_per_cycle> 	</program>
<program> 	<file>haskell/objects.hi haskell/objects.hs</file> 	<name>haskell-objects</name> 	<instructions>928</instructions> 	<cycles>256</cycles> 	<time>8.80</time> 	<time_per_cycle>.0343750000000000</time_per_cycle> 	<ticks>33758393083</ticks> 	<ticks_per_cycle>131868722</ticks_per_cycle> 	</program>
<program> 	<file>haskell/polymorphic_recursion.hi haskell/polymorphic_recursion.hs</file> 	<name>haskell-polymorphic_recursion</name> 	<instructions>2053</instructions> 	<cycles>256</cycles> 	<time>6.67</time> 	<time_per_cycle>.0260546875000000</time_per_cycle> 	<ticks>26163689613</ticks> 	<ticks_per_cycle>102201912</ticks_per_cycle> 	</program>
<program> 	<file>haskell/recursion.hi haskell/recursion.hs</file> 	<name>haskell-recursion</name> 	<instructions>749</instructions> 	<cycles>256</cycles> 	<time>3.32</time> 	<time_per_cycle>.0129687500000000</time_per_cycle> 	<ticks>12951153169</ticks> 	<ticks_per_cycle>50590442</ticks_per_cycle> 	</program>
<program> 	<file>haskell/tail_recursion.hi haskell/tail_recursion.hs</file> 	<name>haskell-tail_recursion</name> 	<instructions>742</instructions> 	<cycles>2097152</cycles> 	<time>1.10</time> 	<time_per_cycle>.0000005245208740</time_per_cycle> 	<ticks>4331330143</ticks> 	<ticks_per_cycle>2065</ticks_per_cycle> 	</program>
<program> 	<file>haskell/zipwith.hi haskell/zipwith.hs</file> 	<name>haskell-zipwith</name> 	<instructions>892</instructions> 	<cycles>4194304</cycles> 	<time>1.36</time> 	<time_per_cycle>.0000003242492675</time_per_cycle> 	<ticks>5344117240</ticks> 	<ticks_per_cycle>1274</ticks_per_cycle> 	</program>
<program> 	<file>go-fast</file> 	<name>go-fast</name> 	<instructions>1</instructions> 	<cycles>134217728</cycles> 	<time>1.61</time> 	<time_per_cycle>.0000000119954347</time_per_cycle> 	<ticks>6269894017</ticks> 	<ticks_per_cycle>46</ticks_per_cycle> 	</program>
<program> 	<file>go-recursion</file> 	<name>go-recursion</name> 	<instructions>1</instructions> 	<cycles>256</cycles> 	<time>2.34</time> 	<time_per_cycle>.0091406250000000</time_per_cycle> 	<ticks>9196148338</ticks> 	<ticks_per_cycle>35922454</ticks_per_cycle> 	</program>
<program> 	<file>go-structs</file> 	<name>go-structs</name> 	<instructions>1</instructions> 	<cycles>4</cycles> 	<time>16.37</time> 	<time_per_cycle>4.0925000000000000</time_per_cycle> 	<ticks>64800293065</ticks> 	<ticks_per_cycle>16200073266</ticks_per_cycle> 	</program>
<program> 	<file>java/Functions.java</file> 	<name>java-Functions</name> 	<instructions>1</instructions> 	<cycles>256</cycles> 	<time>1.58</time> 	<time_per_cycle>.0061718750000000</time_per_cycle> 	<ticks>6180838145</ticks> 	<ticks_per_cycle>24143899</ticks_per_cycle> 	</program>
<program> 	<file>java/Objects.java</file> 	<name>java-Objects</name> 	<instructions>1</instructions> 	<cycles>256</cycles> 	<time>76.62</time> 	<time_per_cycle>.2992968750000000</time_per_cycle> 	<ticks>309336740863</ticks> 	<ticks_per_cycle>1208346643</ticks_per_cycle> 	</program>
<program> 	<file>java/Recursion.java</file> 	<name>java-Recursion</name> 	<instructions>1</instructions> 	<cycles>256</cycles> 	<time>1.58</time> 	<time_per_cycle>.0061718750000000</time_per_cycle> 	<ticks>6178200707</ticks> 	<ticks_per_cycle>24133596</ticks_per_cycle> 	</program>
<program> 	<file>pascal/Objects.pp</file> 	<name>pascal-Objects</name> 	<instructions>1</instructions> 	<cycles>2</cycles> 	<time>16.75</time> 	<time_per_cycle>8.3750000000000000</time_per_cycle> 	<ticks>65331424746</ticks> 	<ticks_per_cycle>32665712373</ticks_per_cycle> 	</program>
<program> 	<file>pascal/recursion.pp</file> 	<name>pascal-recursion</name> 	<instructions>1</instructions> 	<cycles>256</cycles> 	<time>3.87</time> 	<time_per_cycle>.0151171875000000</time_per_cycle> 	<ticks>15101533019</ticks> 	<ticks_per_cycle>58990363</ticks_per_cycle> 	</program>
</programs></fibonacci>